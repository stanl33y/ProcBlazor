@page "/login"
@using ProcBlazor.Application.DTOs
@using ProcBlazor.Domain.Entities
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="col-12 col-sm-12 col-md-6 col-lg-3">
        <h3 class="title">Login</h3>

        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
            </div>
            <div class="form-group mt-1">
                <label for="senha">Senha:</label>
                <InputText id="senha" @bind-Value="loginModel.Senha" type="password" class="form-control" />
            </div>
            @if (erro != string.Empty)
            {
                <p class="alert alert-danger mt-1 p-1">@erro</p>
            }

            <button type="submit" class="btn btn-primary mt-2">Entrar</button>

        </EditForm>
    </div>
</div>




@code {
    private LoginDTO loginModel = new LoginDTO();
    private string erro = string.Empty;

    private async Task HandleLogin()
    {
        var response = await HttpClient.PostAsJsonAsync("api/v1/auth/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var responseContent = await response.Content.ReadFromJsonAsync<LoginResponseDTO>();
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", responseContent.Token);

            NavigationManager.NavigateTo("/");
        }
        else
        {
            erro = "Usuário ou senha inválidos";
        }
    }
}